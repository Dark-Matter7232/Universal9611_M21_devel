; ModuleID = 'lib/win_minmax.o'
source_filename = "lib/win_minmax.c"
target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128"
target triple = "aarch64-unknown-linux-gnu"

%struct.kernel_symbol = type { i64, i8* }
%struct.minmax = type { [3 x %struct.minmax_sample] }
%struct.minmax_sample = type { i32, i32 }

@__kstrtab_minmax_running_max = internal constant [19 x i8] c"minmax_running_max\00", section "__ksymtab_strings", align 1
@__ksymtab_minmax_running_max = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.minmax*, i32, i32, i32)* @minmax_running_max to i64), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__kstrtab_minmax_running_max, i32 0, i32 0) }, section "___ksymtab+minmax_running_max", align 8
@llvm.used = appending global [2 x i8*] [i8* bitcast (void (i8*, i8*)* @__cfi_check_fail to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_minmax_running_max to i8*)], section "llvm.metadata"

; Function Attrs: nofree noimplicitfloat nounwind null_pointer_is_valid optsize
define dso_local i32 @minmax_running_max(%struct.minmax* nocapture %0, i32 %1, i32 %2, i32 %3) #0 !type !9 !type !10 !type !11 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %struct.minmax_sample*
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  %8 = bitcast i64* %5 to i32*
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %struct.minmax_sample, %struct.minmax_sample* %6, i64 0, i32 1
  store i32 %3, i32* %9, align 4
  %10 = getelementptr inbounds %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ugt i32 %11, %3
  br i1 %12, label %13, label %19, !prof !12

13:                                               ; preds = %4
  %14 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 2
  %15 = getelementptr inbounds %struct.minmax_sample, %struct.minmax_sample* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %2, %16
  %18 = icmp ugt i32 %17, %1
  br i1 %18, label %19, label %27, !prof !13

19:                                               ; preds = %13, %4
  %20 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 2
  %21 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 1
  %22 = getelementptr inbounds %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 0, i32 0
  store i32 %2, i32* %22, align 4
  store i32 %3, i32* %10, align 4
  %23 = bitcast %struct.minmax* %0 to i64*
  %24 = bitcast %struct.minmax_sample* %21 to i64*
  %25 = load i64, i64* %23, align 4
  store i64 %25, i64* %24, align 4
  %26 = bitcast %struct.minmax_sample* %20 to i64*
  store i64 %25, i64* %26, align 4
  br label %45

27:                                               ; preds = %13
  %28 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 1, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %29, %3
  br i1 %30, label %36, label %31, !prof !12

31:                                               ; preds = %27
  %32 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 1
  %33 = bitcast %struct.minmax_sample* %32 to i64*
  %34 = load i64, i64* %5, align 8
  store i64 %34, i64* %33, align 4
  %35 = bitcast %struct.minmax_sample* %14 to i64*
  store i64 %34, i64* %35, align 4
  br label %43

36:                                               ; preds = %27
  %37 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 2, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %38, %3
  br i1 %39, label %43, label %40, !prof !12

40:                                               ; preds = %36
  %41 = bitcast %struct.minmax_sample* %14 to i64*
  %42 = load i64, i64* %5, align 8
  store i64 %42, i64* %41, align 4
  br label %43

43:                                               ; preds = %40, %36, %31
  %44 = call fastcc i32 @minmax_subwin_update(%struct.minmax* %0, i32 %1, %struct.minmax_sample* nonnull %6) #6
  br label %45

45:                                               ; preds = %43, %19
  %46 = phi i32 [ %3, %19 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  ret i32 %46
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree noimplicitfloat norecurse nounwind null_pointer_is_valid optsize
define internal fastcc i32 @minmax_subwin_update(%struct.minmax* nocapture %0, i32 %1, %struct.minmax_sample* nocapture readonly %2) unnamed_addr #2 !type !14 !type !15 !type !16 {
  %4 = getelementptr inbounds %struct.minmax_sample, %struct.minmax_sample* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sub i32 %5, %7
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %26, !prof !13

10:                                               ; preds = %3
  %11 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 1
  %12 = bitcast %struct.minmax_sample* %11 to i64*
  %13 = bitcast %struct.minmax* %0 to i64*
  %14 = load i64, i64* %12, align 4
  store i64 %14, i64* %13, align 4
  %15 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 2
  %16 = bitcast %struct.minmax_sample* %15 to i64*
  %17 = load i64, i64* %16, align 4
  store i64 %17, i64* %12, align 4
  %18 = bitcast %struct.minmax_sample* %2 to i64*
  %19 = load i64, i64* %18, align 4
  store i64 %19, i64* %16, align 4
  %20 = load i32, i32* %4, align 4
  %21 = trunc i64 %14 to i32
  %22 = sub i32 %20, %21
  %23 = icmp ugt i32 %22, %1
  br i1 %23, label %24, label %52, !prof !13

24:                                               ; preds = %10
  store i64 %17, i64* %13, align 4
  store i64 %19, i64* %12, align 4
  %25 = load i64, i64* %18, align 4
  store i64 %25, i64* %16, align 4
  br label %52

26:                                               ; preds = %3
  %27 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 1
  %28 = getelementptr inbounds %struct.minmax_sample, %struct.minmax_sample* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %7
  %31 = lshr i32 %1, 2
  %32 = icmp ugt i32 %8, %31
  %33 = and i1 %32, %30
  br i1 %33, label %34, label %40, !prof !17

34:                                               ; preds = %26
  %35 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 2
  %36 = bitcast %struct.minmax_sample* %2 to i64*
  %37 = bitcast %struct.minmax_sample* %27 to i64*
  %38 = load i64, i64* %36, align 4
  store i64 %38, i64* %37, align 4
  %39 = bitcast %struct.minmax_sample* %35 to i64*
  store i64 %38, i64* %39, align 4
  br label %52

40:                                               ; preds = %26
  %41 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 2
  %42 = getelementptr inbounds %struct.minmax_sample, %struct.minmax_sample* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, %29
  %45 = lshr i32 %1, 1
  %46 = icmp ugt i32 %8, %45
  %47 = and i1 %46, %44
  br i1 %47, label %48, label %52, !prof !17

48:                                               ; preds = %40
  %49 = bitcast %struct.minmax_sample* %2 to i64*
  %50 = bitcast %struct.minmax_sample* %41 to i64*
  %51 = load i64, i64* %49, align 4
  store i64 %51, i64* %50, align 4
  br label %52

52:                                               ; preds = %48, %40, %34, %24, %10
  %53 = getelementptr inbounds %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  ret i32 %54
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree noimplicitfloat nounwind null_pointer_is_valid optsize
define dso_local i32 @minmax_running_min(%struct.minmax* nocapture %0, i32 %1, i32 %2, i32 %3) local_unnamed_addr #0 !type !9 !type !10 !type !11 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %struct.minmax_sample*
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  %8 = bitcast i64* %5 to i32*
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %struct.minmax_sample, %struct.minmax_sample* %6, i64 0, i32 1
  store i32 %3, i32* %9, align 4
  %10 = getelementptr inbounds %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %3
  br i1 %12, label %13, label %19, !prof !12

13:                                               ; preds = %4
  %14 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 2
  %15 = getelementptr inbounds %struct.minmax_sample, %struct.minmax_sample* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %2, %16
  %18 = icmp ugt i32 %17, %1
  br i1 %18, label %19, label %27, !prof !13

19:                                               ; preds = %13, %4
  %20 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 2
  %21 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 1
  %22 = getelementptr inbounds %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 0, i32 0
  store i32 %2, i32* %22, align 4
  store i32 %3, i32* %10, align 4
  %23 = bitcast %struct.minmax* %0 to i64*
  %24 = bitcast %struct.minmax_sample* %21 to i64*
  %25 = load i64, i64* %23, align 4
  store i64 %25, i64* %24, align 4
  %26 = bitcast %struct.minmax_sample* %20 to i64*
  store i64 %25, i64* %26, align 4
  br label %45

27:                                               ; preds = %13
  %28 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 1, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp ult i32 %29, %3
  br i1 %30, label %36, label %31, !prof !12

31:                                               ; preds = %27
  %32 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 1
  %33 = bitcast %struct.minmax_sample* %32 to i64*
  %34 = load i64, i64* %5, align 8
  store i64 %34, i64* %33, align 4
  %35 = bitcast %struct.minmax_sample* %14 to i64*
  store i64 %34, i64* %35, align 4
  br label %43

36:                                               ; preds = %27
  %37 = getelementptr %struct.minmax, %struct.minmax* %0, i64 0, i32 0, i64 2, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %38, %3
  br i1 %39, label %43, label %40, !prof !12

40:                                               ; preds = %36
  %41 = bitcast %struct.minmax_sample* %14 to i64*
  %42 = load i64, i64* %5, align 8
  store i64 %42, i64* %41, align 4
  br label %43

43:                                               ; preds = %40, %36, %31
  %44 = call fastcc i32 @minmax_subwin_update(%struct.minmax* %0, i32 %1, %struct.minmax_sample* nonnull %6) #6
  br label %45

45:                                               ; preds = %43, %19
  %46 = phi i32 [ %3, %19 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  ret i32 %46
}

; Function Attrs: noimplicitfloat nounwind null_pointer_is_valid optsize
define weak_odr hidden void @__cfi_check_fail(i8* %0, i8* %1) #3 {
  %3 = icmp eq i8* %0, null, !nosanitize !18
  br i1 %3, label %4, label %5, !nosanitize !18

4:                                                ; preds = %5, %2
  call void @llvm.trap() #7, !nosanitize !18
  unreachable, !nosanitize !18

5:                                                ; preds = %2
  %6 = load i8, i8* %0, align 4, !nosanitize !18
  %7 = icmp ult i8 %6, 5
  br i1 %7, label %4, label %8

8:                                                ; preds = %5
  ret void, !nosanitize !18
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

define weak dso_local void @__cfi_check(i64 %0, i8* %1, i8* %2) local_unnamed_addr {
  tail call void @llvm.trap()
  unreachable
}

attributes #0 = { nofree noimplicitfloat nounwind null_pointer_is_valid optsize "disable-tail-calls"="true" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nofree noimplicitfloat norecurse nounwind null_pointer_is_valid optsize "disable-tail-calls"="true" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noimplicitfloat nounwind null_pointer_is_valid optsize "disable-tail-calls"="true" "frame-pointer"="non-leaf" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="generic" "target-features"="+neon" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noimplicitfloat optsize }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5, !6, !7}
!llvm.ident = !{!8}

!0 = !{i32 1, !"wchar_size", i32 2}
!1 = !{i32 4, !"Cross-DSO CFI", i32 1}
!2 = !{i32 4, !"CFI Canonical Jump Tables", i32 1}
!3 = !{i32 1, !"branch-target-enforcement", i32 0}
!4 = !{i32 1, !"sign-return-address", i32 0}
!5 = !{i32 1, !"sign-return-address-all", i32 0}
!6 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!7 = !{i32 1, !"EnableSplitLTOUnit", i32 1}
!8 = !{!"Proton clang version 12.0.0 (https://github.com/llvm/llvm-project bfda69416c6d0a76b40644b1b0cbc1cbca254a61)"}
!9 = !{i64 0, !"_ZTSFjP6minmaxjjjE"}
!10 = !{i64 0, !"_ZTSFjPvjjjE.generalized"}
!11 = !{i64 0, i64 -9108633685777981530}
!12 = !{!"branch_weights", i32 2000, i32 1}
!13 = !{!"branch_weights", i32 1, i32 2000}
!14 = !{i64 0, !"_ZTSFjP6minmaxjPK13minmax_sampleE"}
!15 = !{i64 0, !"_ZTSFjPvjPKvE.generalized"}
!16 = !{i64 0, i64 -893136125147467670}
!17 = !{!"branch_weights", i32 1, i32 4001}
!18 = !{}

^0 = module: (path: "lib/win_minmax.o", hash: (605240615, 3916334573, 2864280938, 709206172, 1858870823))
^1 = gv: (name: "llvm.lifetime.start.p0i8") ; guid = 3657761528566682672
^2 = gv: (name: "__cfi_check_fail", summaries: (function: (module: ^0, flags: (linkage: weak_odr, notEligibleToImport: 0, live: 0, dsoLocal: 1, canAutoHide: 0), insts: 8))) ; guid = 3751450213607891692
^3 = gv: (name: "__ksymtab_minmax_running_max", summaries: (variable: (module: ^0, flags: (linkage: internal, notEligibleToImport: 1, live: 0, dsoLocal: 1, canAutoHide: 0), varFlags: (readonly: 1, writeonly: 0, constant: 1), refs: (^10, ^7)))) ; guid = 3846272238303736054
^4 = gv: (name: "minmax_running_min", summaries: (function: (module: ^0, flags: (linkage: external, notEligibleToImport: 0, live: 0, dsoLocal: 1, canAutoHide: 0), insts: 54, calls: ((callee: ^8))))) ; guid = 4477729702471019840
^5 = gv: (name: "llvm.trap") ; guid = 6116349651215144041
^6 = gv: (name: "__cfi_check", summaries: (function: (module: ^0, flags: (linkage: weak, notEligibleToImport: 0, live: 0, dsoLocal: 1, canAutoHide: 0), insts: 2))) ; guid = 6679345584174613038
^7 = gv: (name: "minmax_running_max", summaries: (function: (module: ^0, flags: (linkage: external, notEligibleToImport: 0, live: 0, dsoLocal: 1, canAutoHide: 0), insts: 54, calls: ((callee: ^8))))) ; guid = 9227984979007309384
^8 = gv: (name: "minmax_subwin_update", summaries: (function: (module: ^0, flags: (linkage: internal, notEligibleToImport: 0, live: 0, dsoLocal: 1, canAutoHide: 0), insts: 61, funcFlags: (readNone: 0, readOnly: 0, noRecurse: 1, returnDoesNotAlias: 0, noInline: 0, alwaysInline: 0)))) ; guid = 11228765315243788194
^9 = gv: (name: "llvm.lifetime.end.p0i8") ; guid = 14311549039910520616
^10 = gv: (name: "__kstrtab_minmax_running_max", summaries: (variable: (module: ^0, flags: (linkage: internal, notEligibleToImport: 1, live: 0, dsoLocal: 1, canAutoHide: 0), varFlags: (readonly: 1, writeonly: 0, constant: 1)))) ; guid = 14604451161133770755
^11 = gv: (name: "llvm.used", summaries: (variable: (module: ^0, flags: (linkage: appending, notEligibleToImport: 1, live: 1, dsoLocal: 0, canAutoHide: 0), varFlags: (readonly: 0, writeonly: 0, constant: 0), refs: (^3, ^2)))) ; guid = 15665353970260777610
^12 = flags: 8
^13 = blockcount: 31
